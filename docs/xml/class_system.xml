<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_system" kind="class" language="C++" prot="public">
    <compoundname>System</compoundname>
    <includes refid="_system_8h" local="no">System.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_system_1a99d3c3036a58c1698f286677c4ace286" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void System::Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <qualifiedname>System::Start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/I_am_not_a_weeb/source/repos/PO projekt c++/System.h" line="16" column="6" bodyfile="C:/Users/I_am_not_a_weeb/source/repos/PO projekt c++/System.h" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_system_1af66432de07a152c6f4376565c46ba7c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void System::Open</definition>
        <argsstring>(std::shared_ptr&lt; bazaKsiazek &gt;f_bazaK, std::shared_ptr&lt; bazaCzasopism &gt;f_bazaC, std::shared_ptr&lt; bazaAutorow &gt;f_bazaA, std::shared_ptr&lt; bazaDrukarni &gt;f_bazaD, std::shared_ptr&lt; bazaUmow &gt;f_bazaU, std::shared_ptr&lt; sklep &gt; f_skl, std::shared_ptr&lt; std::fstream &gt; f_fileK, std::shared_ptr&lt; std::fstream &gt; f_fileC, std::shared_ptr&lt; std::fstream &gt; f_fileA, std::shared_ptr&lt; std::fstream &gt; f_fileU, std::shared_ptr&lt; std::fstream &gt; f_fileD, std::shared_ptr&lt; std::fstream &gt; f_fileSklK, std::shared_ptr&lt; std::fstream &gt; f_fileSklC)</argsstring>
        <name>Open</name>
        <qualifiedname>System::Open</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbaza_ksiazek" kindref="compound">bazaKsiazek</ref> &gt;</type>
          <declname>f_bazaK</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbaza_czasopism" kindref="compound">bazaCzasopism</ref> &gt;</type>
          <declname>f_bazaC</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbaza_autorow" kindref="compound">bazaAutorow</ref> &gt;</type>
          <declname>f_bazaA</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbaza_drukarni" kindref="compound">bazaDrukarni</ref> &gt;</type>
          <declname>f_bazaD</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbaza_umow" kindref="compound">bazaUmow</ref> &gt;</type>
          <declname>f_bazaU</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsklep" kindref="compound">sklep</ref> &gt;</type>
          <declname>f_skl</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileK</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileC</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileA</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileU</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileD</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileSklK</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileSklC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/I_am_not_a_weeb/source/repos/PO projekt c++/System.h" line="20" column="6" bodyfile="C:/Users/I_am_not_a_weeb/source/repos/PO projekt c++/System.h" bodystart="20" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_system_1a34dabc5883367c59d834571cc13f6072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void System::Save</definition>
        <argsstring>(std::shared_ptr&lt; bazaKsiazek &gt;f_bazaK, std::shared_ptr&lt; bazaCzasopism &gt;f_bazaC, std::shared_ptr&lt; bazaAutorow &gt;f_bazaA, std::shared_ptr&lt; bazaDrukarni &gt;f_bazaD, std::shared_ptr&lt; bazaUmow &gt;f_bazaU, std::shared_ptr&lt; sklep &gt; f_skl, std::shared_ptr&lt; std::fstream &gt; f_fileK, std::shared_ptr&lt; std::fstream &gt; f_fileC, std::shared_ptr&lt; std::fstream &gt; f_fileA, std::shared_ptr&lt; std::fstream &gt; f_fileU, std::shared_ptr&lt; std::fstream &gt; f_fileD, std::shared_ptr&lt; std::fstream &gt; f_fileSklK, std::shared_ptr&lt; std::fstream &gt; f_fileSklC)</argsstring>
        <name>Save</name>
        <qualifiedname>System::Save</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbaza_ksiazek" kindref="compound">bazaKsiazek</ref> &gt;</type>
          <declname>f_bazaK</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbaza_czasopism" kindref="compound">bazaCzasopism</ref> &gt;</type>
          <declname>f_bazaC</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbaza_autorow" kindref="compound">bazaAutorow</ref> &gt;</type>
          <declname>f_bazaA</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbaza_drukarni" kindref="compound">bazaDrukarni</ref> &gt;</type>
          <declname>f_bazaD</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classbaza_umow" kindref="compound">bazaUmow</ref> &gt;</type>
          <declname>f_bazaU</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classsklep" kindref="compound">sklep</ref> &gt;</type>
          <declname>f_skl</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileK</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileC</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileA</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileU</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileD</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileSklK</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; std::fstream &gt;</type>
          <declname>f_fileSklC</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/I_am_not_a_weeb/source/repos/PO projekt c++/System.h" line="110" column="6" bodyfile="C:/Users/I_am_not_a_weeb/source/repos/PO projekt c++/System.h" bodystart="110" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/I_am_not_a_weeb/source/repos/PO projekt c++/System.h" line="11" column="1" bodyfile="C:/Users/I_am_not_a_weeb/source/repos/PO projekt c++/System.h" bodystart="12" bodyend="141"/>
    <listofallmembers>
      <member refid="class_system_1af66432de07a152c6f4376565c46ba7c7" prot="public" virt="non-virtual"><scope>System</scope><name>Open</name></member>
      <member refid="class_system_1a34dabc5883367c59d834571cc13f6072" prot="public" virt="non-virtual"><scope>System</scope><name>Save</name></member>
      <member refid="class_system_1a99d3c3036a58c1698f286677c4ace286" prot="public" virt="non-virtual"><scope>System</scope><name>Start</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
